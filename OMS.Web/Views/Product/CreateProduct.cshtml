@model OMS.Core.DTO.Product

@{
    Layout = null;
}

<div class="content">
    <div class="modalBody">
        @using (Html.BeginForm(ProductController.ActionNameConstants.CreateProduct,
                       ProductController.NameConst,
                       FormMethod.Post,
                       new { @id = "productfrm" }))
        {
            @Html.AntiForgeryToken()
            <div class="alert alert-danger alert-dismissible errorAlert" style="display:none;" role="alert">
                <strong id="errTitle"></strong>:<span id="errMsg"></span>
            </div>
            <div class="form-horizontal">
                @Html.HiddenFor(model => model.ID)
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 text1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control",@required =true } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 text1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @required = true } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2 text1" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @required = true } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2 text1" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CategoryID, Enumerable.Empty<SelectListItem>(), "-Please Select-", new { @class = "form-control categoryDrp", @required = true, @data_value=Model?.CategoryID })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="modalFooter">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <span class="btn btn-primary btnSaveProduct">Save changes</span>
    </div>
</div>

