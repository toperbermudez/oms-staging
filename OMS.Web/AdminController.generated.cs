// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace OMS.Web.Controllers
{
    public partial class AdminController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AdminController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetCategory()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCategory);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult DeleteCategory()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteCategory);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AdminController Actions { get { return MVC.Admin; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Admin";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Variants = "Variants";
            public readonly string CreateVariants = "CreateVariants";
            public readonly string Products = "Products";
            public readonly string CreateProducts = "CreateProducts";
            public readonly string ListCategory = "ListCategory";
            public readonly string CreateCategory = "CreateCategory";
            public readonly string GetCategory = "GetCategory";
            public readonly string DeleteCategory = "DeleteCategory";
            public readonly string Employee = "Employee";
            public readonly string CreateEmployee = "CreateEmployee";
            public readonly string Admin = "Admin";
            public readonly string CreateAdmin = "CreateAdmin";
            public readonly string CreateUser = "CreateUser";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Variants = "Variants";
            public const string CreateVariants = "CreateVariants";
            public const string Products = "Products";
            public const string CreateProducts = "CreateProducts";
            public const string ListCategory = "ListCategory";
            public const string CreateCategory = "CreateCategory";
            public const string GetCategory = "GetCategory";
            public const string DeleteCategory = "DeleteCategory";
            public const string Employee = "Employee";
            public const string CreateEmployee = "CreateEmployee";
            public const string Admin = "Admin";
            public const string CreateAdmin = "CreateAdmin";
            public const string CreateUser = "CreateUser";
        }


        static readonly ActionParamsClass_CreateProducts s_params_CreateProducts = new ActionParamsClass_CreateProducts();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateProducts CreateProductsParams { get { return s_params_CreateProducts; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateProducts
        {
            public readonly string product = "product";
        }
        static readonly ActionParamsClass_CreateCategory s_params_CreateCategory = new ActionParamsClass_CreateCategory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateCategory CreateCategoryParams { get { return s_params_CreateCategory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateCategory
        {
            public readonly string category = "category";
        }
        static readonly ActionParamsClass_GetCategory s_params_GetCategory = new ActionParamsClass_GetCategory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetCategory GetCategoryParams { get { return s_params_GetCategory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetCategory
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_DeleteCategory s_params_DeleteCategory = new ActionParamsClass_DeleteCategory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteCategory DeleteCategoryParams { get { return s_params_DeleteCategory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteCategory
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_CreateEmployee s_params_CreateEmployee = new ActionParamsClass_CreateEmployee();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateEmployee CreateEmployeeParams { get { return s_params_CreateEmployee; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateEmployee
        {
            public readonly string account = "account";
        }
        static readonly ActionParamsClass_CreateAdmin s_params_CreateAdmin = new ActionParamsClass_CreateAdmin();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateAdmin CreateAdminParams { get { return s_params_CreateAdmin; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateAdmin
        {
            public readonly string account = "account";
        }
        static readonly ActionParamsClass_CreateUser s_params_CreateUser = new ActionParamsClass_CreateUser();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CreateUser CreateUserParams { get { return s_params_CreateUser; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CreateUser
        {
            public readonly string user = "user";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ViewStart = "_ViewStart";
                public readonly string Admin = "Admin";
                public readonly string Category = "Category";
                public readonly string CreateAdmin = "CreateAdmin";
                public readonly string CreateCategory = "CreateCategory";
                public readonly string CreateProducts = "CreateProducts";
                public readonly string CreateRole = "CreateRole";
                public readonly string CreateVariants = "CreateVariants";
                public readonly string Employee = "Employee";
                public readonly string Index = "Index";
                public readonly string Products = "Products";
                public readonly string Variants = "Variants";
            }
            public readonly string _ViewStart = "~/Views/Admin/_ViewStart.cshtml";
            public readonly string Admin = "~/Views/Admin/Admin.cshtml";
            public readonly string Category = "~/Views/Admin/Category.cshtml";
            public readonly string CreateAdmin = "~/Views/Admin/CreateAdmin.cshtml";
            public readonly string CreateCategory = "~/Views/Admin/CreateCategory.cshtml";
            public readonly string CreateProducts = "~/Views/Admin/CreateProducts.cshtml";
            public readonly string CreateRole = "~/Views/Admin/CreateRole.cshtml";
            public readonly string CreateVariants = "~/Views/Admin/CreateVariants.cshtml";
            public readonly string Employee = "~/Views/Admin/Employee.cshtml";
            public readonly string Index = "~/Views/Admin/Index.cshtml";
            public readonly string Products = "~/Views/Admin/Products.cshtml";
            public readonly string Variants = "~/Views/Admin/Variants.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AdminController : OMS.Web.Controllers.AdminController
    {
        public T4MVC_AdminController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void VariantsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Variants()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Variants);
            VariantsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateVariantsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateVariants()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateVariants);
            CreateVariantsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ProductsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Products()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Products);
            ProductsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateProductsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateProducts()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateProducts);
            CreateProductsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateProductsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, OMS.Core.DTO.Product product);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateProducts(OMS.Core.DTO.Product product)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateProducts);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "product", product);
            CreateProductsOverride(callInfo, product);
            return callInfo;
        }

        [NonAction]
        partial void ListCategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListCategory()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListCategory);
            ListCategoryOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateCategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateCategory()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateCategory);
            CreateCategoryOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateCategoryOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, OMS.Core.DTO.Category category);

        [NonAction]
        public override System.Web.Mvc.JsonResult CreateCategory(OMS.Core.DTO.Category category)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CreateCategory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "category", category);
            CreateCategoryOverride(callInfo, category);
            return callInfo;
        }

        [NonAction]
        partial void GetCategoryOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetCategory(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetCategory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            GetCategoryOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DeleteCategoryOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.JsonResult DeleteCategory(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.DeleteCategory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteCategoryOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EmployeeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Employee()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Employee);
            EmployeeOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateEmployeeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateEmployee()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateEmployee);
            CreateEmployeeOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateEmployeeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, OMS.Core.DTO.Account account);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateEmployee(OMS.Core.DTO.Account account)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateEmployee);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "account", account);
            CreateEmployeeOverride(callInfo, account);
            return callInfo;
        }

        [NonAction]
        partial void AdminOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Admin()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Admin);
            AdminOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateAdminOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateAdmin()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateAdmin);
            CreateAdminOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateAdminOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, OMS.Core.DTO.Account account);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateAdmin(OMS.Core.DTO.Account account)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateAdmin);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "account", account);
            CreateAdminOverride(callInfo, account);
            return callInfo;
        }

        [NonAction]
        partial void CreateUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateUser()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateUser);
            CreateUserOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateUserOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, OMS.Core.DTO.User user);

        [NonAction]
        public override System.Web.Mvc.ActionResult CreateUser(OMS.Core.DTO.User user)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CreateUser);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "user", user);
            CreateUserOverride(callInfo, user);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
